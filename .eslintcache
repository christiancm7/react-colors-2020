[{"/Users/christianmorales/Desktop/React/colors/client/src/reportWebVitals.js":"1","/Users/christianmorales/Desktop/React/colors/client/src/seedColors.js":"2","/Users/christianmorales/Desktop/React/colors/client/src/App.js":"3","/Users/christianmorales/Desktop/React/colors/client/src/Palette.js":"4","/Users/christianmorales/Desktop/React/colors/client/src/ColorBox.js":"5","/Users/christianmorales/Desktop/React/colors/client/src/index.js":"6","/Users/christianmorales/Desktop/React/colors/client/src/colorHelpers.js":"7","/Users/christianmorales/Desktop/React/colors/client/src/Navbar.js":"8"},{"size":362,"mtime":1607110544417,"results":"9","hashOfConfig":"10"},{"size":10283,"mtime":1607131168470,"results":"11","hashOfConfig":"10"},{"size":929,"mtime":1607190410101,"results":"12","hashOfConfig":"10"},{"size":1252,"mtime":1607186136937,"results":"13","hashOfConfig":"10"},{"size":1418,"mtime":1607130158716,"results":"14","hashOfConfig":"10"},{"size":543,"mtime":1607189171689,"results":"15","hashOfConfig":"10"},{"size":1690,"mtime":1607134218106,"results":"16","hashOfConfig":"10"},{"size":2752,"mtime":1607184595620,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ftciy7",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"/Users/christianmorales/Desktop/React/colors/client/src/reportWebVitals.js",[],"/Users/christianmorales/Desktop/React/colors/client/src/seedColors.js",["35"],"/Users/christianmorales/Desktop/React/colors/client/src/App.js",[],"/Users/christianmorales/Desktop/React/colors/client/src/Palette.js",[],"/Users/christianmorales/Desktop/React/colors/client/src/ColorBox.js",[],"/Users/christianmorales/Desktop/React/colors/client/src/index.js",[],"/Users/christianmorales/Desktop/React/colors/client/src/colorHelpers.js",[],"/Users/christianmorales/Desktop/React/colors/client/src/Navbar.js",["36"],"import React, { Component } from 'react'\nimport 'rc-slider/assets/index.css'\nimport './Navbar.css'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slider from 'rc-slider'\n\nclass Navbar extends Component {\n    state= {\n        format: 'hex',\n        open: false\n    }\n\n    handleFormatChange = (e) => {\n        this.setState({ format: e.target.value, open: true });\n        this.props.handleChange(e.target.value)\n    }\n\n    closeSnackbar = () => {\n        this.setState({ open: false })\n    }\n\n    render() {\n        const { level, changeLevel } = this.props;\n        const { format } = this.state;\n\n        return (\n            <header className=\"Navbar\">\n                <div className=\"logo\">\n                    <a href=\"#\">react color picker</a>\n                </div>\n                <div className=\"slider-container\">\n                    <span>Level: {level}</span>\n                    <div className=\"slider\">\n                        <Slider  \n                            defaultValue={level} \n                            min={100} \n                            max={900}\n                            step={100}\n                            onAfterChange={changeLevel}/>\n                    </div>\n                </div>\n                <div className=\"select-container\">\n                    <Select value={format} onChange={this.handleFormatChange}>\n                        <MenuItem value=\"hex\">HEX - #fffff</MenuItem>\n                        <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\n                        <MenuItem value=\"rgba\">RGBA - rgba(255,255,255)</MenuItem>\n                    </Select>\n                </div>\n                <Snackbar \n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left'}} \n                    open={this.state.open}\n                    autoHideDuration={3000}\n                    message={<span id=\"message-id\">Format Changed To {format.toUpperCase()}</span>}\n                    contentProps={{\n                        \"aria-describedby\": \"message-id\"\n                    }}\n                    onClose={this.closeSnackbar}\n                    action={\n                        <IconButton \n                            onClick={this.closeSnackbar} \n                            color=\"inherit\"\n                            key=\"close\"\n                            aria-label=\"close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>}\n                />\n            </header>\n        )\n    }\n}\n\nexport default Navbar;\n",{"ruleId":"37","severity":1,"message":"38","line":1,"column":1,"nodeType":"39","endLine":244,"endColumn":5},{"ruleId":"40","severity":1,"message":"41","line":33,"column":21,"nodeType":"42","endLine":33,"endColumn":33},"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]